
<%
	
	Option Explicit
	Response.Expires = 0
	Response.Buffer = TRUE


	


REM -------------------------------------------------------------
REM  Define Global Variables
REM -------------------------------------------------------------
	Dim blnDebug

    Dim strWebsite

Select Case True
Case inStr(UCase(Request.ServerVariables("SERVER_NAME")), "MY.WF.CORP") > 0
	strWebsite = "INTRANET"
Case inStr(UCase(Request.ServerVariables("SERVER_NAME")), "M.WINGFOOTCT.COM") > 0
	strWebsite = "MOBILE"
Case inStr(UCase(Request.ServerVariables("SERVER_NAME")), "WINGFOOTCT.COM") > 0
	strWebsite = "WINGFOOTCT"
End Select
   



REM -------------------------------------------------------------
REM Include files
REM -------------------------------------------------------------

%>
<!--#Include Virtual="/include/allinclude.asp" -->
<%

  Call Mainline

  Response.Flush

Sub Mainline
  Call InitVars
  Call WriteHTML
End Sub

Sub InitVars
	Call InitAll
   gstrTitle = "Wingfoot Commercial Tire Systems, LLC"
End Sub

Sub WriteHTML
%>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
 <title>Cost-Per-Mile Calculator</title>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1"/>
    <!-- #include virtual="/include/allinclude.js" -->

<% If (strWebsite = "MOBILE") then WriteStyleSheet() End If %>


<!-- This hides the address bar on iPhone/iPod Touch devices when the page loads. -->
<script type="application/x-javascript">
	addEventListener('load', function() { setTimeout(hideAddressBar, 0); }, false);
	function hideAddressBar() { window.scrollTo(0, 1); }
</script>


    <link rel="stylesheet" href="/GYGlobal/include/bootstrap/bootstrap-3.3.7.min.css"/>
    <script src="/GYGlobal/include/jquery/jquery-ui/js/jquery-3.1.0.min.js"></script>
    <script src="/GYGlobal/include/bootstrap/bootstrap-2.3.2.min.js"></script>
    <script src="/GYGlobal/include/jquery/jquery-1.16.0.validate.min.js"></script>
  
    
    
 
    
    
     <script>

$(document).ready(function () {
    var $validator = $("#myForm").validate({
        rules: {
            GYCost: {
                required: true,
              
                minlength: 2

            },
            GYCasingCredit: {
                required: true,
                minlength: 2
            },
            GYInstallMiles: {
                required: true,
                number: true,
                minlength: 2
            },
            GYRemovalMiles: {
                required: true,
                number: true,
                minlength: 2
            },
            GYTreadDepth: {
                required: true,
                number: true,
                minlength: 2
            },
            GYRemaining32: {
                required: true,
                number: true,
                minlength: 1
            },
            CompCost: {
                required: true,
                minlength: 2
            },
            CompCasingCredit: {
                required: true,
                minlength: 2
            },
            CompInstallMiles: {
                required: true,
                number: true,
                minlength: 2
            },
            CompRemovalMiles: {
                required: true,
                number: true,
                minlength: 2
            },
            CompTreadDepth: {
                required: true,
                number: true,
                minlength: 2
            },
            CompRemaining32: {
                required: true,
                number: true,
                minlength: 1
            },
        }
    });

    $('#rootwizard').bootstrapWizard({
        'tabClass': 'nav nav-pills',
        'onNext': function (tab, navigation, index) {
            var $valid = $("#myForm").valid();
            if (!$valid) {
                $validator.focusInvalid();
                return false;
            }
        }
    });
});


/*Format function for commas in number inputs*/
$(document).ready(function () {
    $('input.number').keyup(function (event) {

        // skip for arrow keys
        if (event.which >= 37 && event.which <= 40) return;

        // format number
        $(this).val(function (index, value) {
            return value
            .replace(/\D/g, "")
            .replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        });

    });
});

$(document).ready(function () {
    $('input.currency').one("focus",function (event) {
        $(this).val('$' + $(this).val());

    });
});


/*functions for tab navigation*/
$(document).ready(function () {
    $('#rootwizard').bootstrapWizard({
        'tabClass': 'nav nav-tabs',
        //  onNext: function(tab, navigation, index) {
        // console.log('event is intercepted at each time');
        //	return true;
        //   }
    });
    $('#add_wizard_previous').on('click', function () {
        $('#rootwizard').bootstrapWizard('previous');
    });
    $('#add_wizard_next').on('click', function () {
        //	console.log('event works at each click');
        $('#rootwizard').bootstrapWizard('next');
    });
});


 
//form calculations
$(document).ready(function () {
    $(".active").on("click", CPM);
    $("li.next").on("click", CPM);
});
 


function CPM () {
        var GYCost = parseInt($("#GYCost").val().replace("$",  ""));
        var GYCasingCredit = parseInt($("#GYCasingCredit").val().replace("$", ""));
        var GYNetCost = GYCost - GYCasingCredit;
        var GYInstall = parseInt($("#GYInstallMiles").val().replace(",", ""));
        var GYRemoval = parseInt($("#GYRemovalMiles").val().replace(",", ""));
        var GYTotalMiles = GYRemoval - GYInstall;
        var GYTreadDepth = parseInt($("#GYTreadDepth").val());
        var GYRemaining32 = parseInt($("#GYRemaining32").val());
        var GYMilesPer32 = GYTotalMiles / (GYTreadDepth - GYRemaining32);
        var GYCPM = GYNetCost / GYTotalMiles;
        var CompCost = parseInt($("#CompCost").val().replace("$", ""));
        var CompCasingCredit = parseInt($("#CompCasingCredit").val().replace("$", ""));
        var CompNetCost = CompCost - CompCasingCredit;
        var CompInstall = parseInt($("#CompInstallMiles").val().replace(",", ""));
        var CompRemoval = parseInt($("#CompRemovalMiles").val().replace(",", ""));
        var CompTotalMiles = CompRemoval - CompInstall;
        var CompTreadDepth = parseInt($("#CompTreadDepth").val());
        var CompRemaining32 = parseInt($("#CompRemaining32").val());
        var CompMilesPer32 = CompTotalMiles / (CompTreadDepth - CompRemaining32);
        var CompCPM = CompNetCost / CompTotalMiles;
        var GYType=$("input[name=opt1]:checked").val();
        var GYTread=$("input[name=opt2]:checked").val();
        var CompType=$("input[name=opt3]:checked").val();
        var CompTread=$("input[name=op4]:checked").val();
       
        $("#GYNetCost").val("$" + GYNetCost.toFixed(2));
        $("#GYTotalMiles").val(GYTotalMiles.toLocaleString());
        $("#GYMilesPer32").val(GYMilesPer32.toFixed(2));
        $("#GYCPM").val("$" + GYCPM.toFixed(5));
        $("#CompNetCost").val("$" + CompNetCost.toFixed(2));
        $("#CompTotalMiles").val(CompTotalMiles.toLocaleString());
        $("#CompMilesPer32").val(CompMilesPer32.toFixed(2));
        $("#CompCPM").val("$" + CompCPM.toFixed(5));
    }




(function ($) {
    var bootstrapWizardCreate = function (element, options) {
        var element = $(element);
        var obj = this;

        // selector skips any 'li' elements that do not contain a child with a tab data-toggle
        var baseItemSelector = 'li:has([data-toggle="tab"])';
        var historyStack = [];

        // Merge options with defaults
        var $settings = $.extend({}, $.fn.bootstrapWizard.defaults, options);
        var $activeTab = null;
        var $navigation = null;

        this.rebindClick = function (selector, fn) {
            selector.unbind('click', fn).bind('click', fn);
        };

        this.fixNavigationButtons = function () {
            // Get the current active tab
            if (!$activeTab.length) {
                // Select first one
                $navigation.find('a:first').tab('show');
                $activeTab = $navigation.find(baseItemSelector + ':first');
            }

            // See if we're currently in the first/last then disable the previous and last buttons
            $($settings.previousSelector, element).toggleClass('disabled', (obj.firstIndex() >= obj.currentIndex()));
            $($settings.nextSelector, element).toggleClass('disabled', (obj.currentIndex() >= obj.navigationLength()));
            $($settings.nextSelector, element).toggleClass('hidden', (obj.currentIndex() >= obj.navigationLength() && $($settings.finishSelector, element).length > 0));
            $($settings.lastSelector, element).toggleClass('hidden', (obj.currentIndex() >= obj.navigationLength() && $($settings.finishSelector, element).length > 0));
            $($settings.finishSelector, element).toggleClass('hidden', (obj.currentIndex() < obj.navigationLength()));
            $($settings.backSelector, element).toggleClass('disabled', (historyStack.length == 0));
            $($settings.backSelector, element).toggleClass('hidden', (obj.currentIndex() >= obj.navigationLength() && $($settings.finishSelector, element).length > 0));

            // We are unbinding and rebinding to ensure single firing and no double-click errors
            obj.rebindClick($($settings.nextSelector, element), obj.next);
            obj.rebindClick($($settings.previousSelector, element), obj.previous);
            obj.rebindClick($($settings.lastSelector, element), obj.last);
            obj.rebindClick($($settings.firstSelector, element), obj.first);
            obj.rebindClick($($settings.finishSelector, element), obj.finish);
            obj.rebindClick($($settings.backSelector, element), obj.back);

            if ($settings.onTabShow && typeof $settings.onTabShow === 'function' && $settings.onTabShow($activeTab, $navigation, obj.currentIndex()) === false) {
                return false;
            }
        };

        this.next = function (e) {
            // If we clicked the last then dont activate this
            if (element.hasClass('last')) {
                return false;
            }

            if ($settings.onNext && typeof $settings.onNext === 'function' && $settings.onNext($activeTab, $navigation, obj.nextIndex()) === false) {
                return false;
            }

            var formerIndex = obj.currentIndex();
            var $index = obj.nextIndex();

            // Did we click the last button
            if ($index > obj.navigationLength()) { } else {
                historyStack.push(formerIndex);
                $navigation.find(baseItemSelector + ($settings.withVisible ? ':visible' : '') + ':eq(' + $index + ') a').tab('show');
            }
        };

        this.previous = function (e) {
            // If we clicked the first then dont activate this
            if (element.hasClass('first')) {
                return false;
            }

            if ($settings.onPrevious && typeof $settings.onPrevious === 'function' && $settings.onPrevious($activeTab, $navigation, obj.previousIndex()) === false) {
                return false;
            }

            var formerIndex = obj.currentIndex();
            var $index = obj.previousIndex();

            if ($index < 0) { } else {
                historyStack.push(formerIndex);
                $navigation.find(baseItemSelector + ($settings.withVisible ? ':visible' : '') + ':eq(' + $index + ') a').tab('show');
            }
        };

        this.first = function (e) {
            if ($settings.onFirst && typeof $settings.onFirst === 'function' && $settings.onFirst($activeTab, $navigation, obj.firstIndex()) === false) {
                return false;
            }

            // If the element is disabled then we won't do anything
            if (element.hasClass('disabled')) {
                return false;
            }

            historyStack.push(obj.currentIndex());
            $navigation.find(baseItemSelector + ':eq(0) a').tab('show');
        };

        this.last = function (e) {
            if ($settings.onLast && typeof $settings.onLast === 'function' && $settings.onLast($activeTab, $navigation, obj.lastIndex()) === false) {
                return false;
            }

            // If the element is disabled then we won't do anything
            if (element.hasClass('disabled')) {
                return false;
            }

            historyStack.push(obj.currentIndex());
            $navigation.find(baseItemSelector + ':eq(' + obj.navigationLength() + ') a').tab('show');
        };

        this.finish = function (e) {
            if ($settings.onFinish && typeof $settings.onFinish === 'function') {
                $settings.onFinish($activeTab, $navigation, obj.lastIndex());
            }
        };

        this.back = function () {
            if (historyStack.length == 0) {
                return null;
            }

            var formerIndex = historyStack.pop();
            if ($settings.onBack && typeof $settings.onBack === 'function' && $settings.onBack($activeTab, $navigation, formerIndex) === false) {
                historyStack.push(formerIndex);
                return false;
            }

            element.find(baseItemSelector + ':eq(' + formerIndex + ') a').tab('show');
        };

        this.currentIndex = function () {
            return $navigation.find(baseItemSelector).index($activeTab);
        };

        this.firstIndex = function () {
            return 0;
        };

        this.lastIndex = function () {
            return obj.navigationLength();
        };
        this.getIndex = function (e) {
            return $navigation.find(baseItemSelector).index(e);
        };
        this.nextIndex = function () {
            return $navigation.find(baseItemSelector).index($activeTab) + 1;
        };
        this.previousIndex = function () {
            return $navigation.find(baseItemSelector).index($activeTab) - 1;
        };
        this.navigationLength = function () {
            return $navigation.find(baseItemSelector).length - 1;
        };
        this.activeTab = function () {
            return $activeTab;
        };
        this.nextTab = function () {
            return $navigation.find(baseItemSelector + ':eq(' + (obj.currentIndex() + 1) + ')').length ? $navigation.find(baseItemSelector + ':eq(' + (obj.currentIndex() + 1) + ')') : null;
        };
        this.previousTab = function () {
            if (obj.currentIndex() <= 0) {
                return null;
            }
            return $navigation.find(baseItemSelector + ':eq(' + parseInt(obj.currentIndex() - 1) + ')');
        };
        this.show = function (index) {
            var tabToShow = isNaN(index) ?
                element.find(baseItemSelector + ' a[href=#' + index + ']') :
                element.find(baseItemSelector + ':eq(' + index + ') a');
            if (tabToShow.length > 0) {
                historyStack.push(obj.currentIndex());
                tabToShow.tab('show');
            }
        };
        this.disable = function (index) {
            $navigation.find(baseItemSelector + ':eq(' + index + ')').addClass('disabled');
        };
        this.enable = function (index) {
            $navigation.find(baseItemSelector + ':eq(' + index + ')').removeClass('disabled');
        };
        this.hide = function (index) {
            $navigation.find(baseItemSelector + ':eq(' + index + ')').hide();
        };
        this.display = function (index) {
            $navigation.find(baseItemSelector + ':eq(' + index + ')').show();
        };
        this.remove = function (args) {
            var $index = args[0];
            var $removeTabPane = typeof args[1] != 'undefined' ? args[1] : false;
            var $item = $navigation.find(baseItemSelector + ':eq(' + $index + ')');

            // Remove the tab pane first if needed
            if ($removeTabPane) {
                var $href = $item.find('a').attr('href');
                $($href).remove();
            }

            // Remove menu item
            $item.remove();
        };

        var innerTabClick = function (e) {
            // Get the index of the clicked tab
            var $ul = $navigation.find(baseItemSelector);
            var clickedIndex = $ul.index($(e.currentTarget).parent(baseItemSelector));
            var $clickedTab = $($ul[clickedIndex]);
            if ($settings.onTabClick && typeof $settings.onTabClick === 'function' && $settings.onTabClick($activeTab, $navigation, obj.currentIndex(), clickedIndex, $clickedTab) === false) {
                return false;
            }
        };

        var innerTabShown = function (e) { // use shown instead of show to help prevent double firing
            var $element = $(e.target).parent();
            var nextTab = $navigation.find(baseItemSelector).index($element);

            // If it's disabled then do not change
            if ($element.hasClass('disabled')) {
                return false;
            }

            if ($settings.onTabChange && typeof $settings.onTabChange === 'function' && $settings.onTabChange($activeTab, $navigation, obj.currentIndex(), nextTab) === false) {
                return false;
            }

            $activeTab = $element; // activated tab
            obj.fixNavigationButtons();
        };

        this.resetWizard = function () {

            // remove the existing handlers
            $('a[data-toggle="tab"]', $navigation).off('click', innerTabClick);
            $('a[data-toggle="tab"]', $navigation).off('shown shown.bs.tab', innerTabShown);

            // reset elements based on current state of the DOM
            $navigation = element.find('ul:first', element);
            $activeTab = $navigation.find(baseItemSelector + '.active', element);

            // re-add handlers
            $('a[data-toggle="tab"]', $navigation).on('click', innerTabClick);
            $('a[data-toggle="tab"]', $navigation).on('shown shown.bs.tab', innerTabShown);

            obj.fixNavigationButtons();
        };

        $navigation = element.find('ul:first', element);
        $activeTab = $navigation.find(baseItemSelector + '.active', element);

        if (!$navigation.hasClass($settings.tabClass)) {
            $navigation.addClass($settings.tabClass);
        }

        // Load onInit
        if ($settings.onInit && typeof $settings.onInit === 'function') {
            $settings.onInit($activeTab, $navigation, 0);
        }

        // Load onShow
        if ($settings.onShow && typeof $settings.onShow === 'function') {
            $settings.onShow($activeTab, $navigation, obj.nextIndex());
        }

        $('a[data-toggle="tab"]', $navigation).on('click', innerTabClick);

        // attach to both shown and shown.bs.tab to support Bootstrap versions 2.3.2 and 3.0.0
        $('a[data-toggle="tab"]', $navigation).on('shown shown.bs.tab', innerTabShown);
    };
    $.fn.bootstrapWizard = function (options) {
        //expose methods
        if (typeof options == 'string') {
            var args = Array.prototype.slice.call(arguments, 1);
            if (args.length === 1) {
                args.toString();
            }
            return this.data('bootstrapWizard')[options](args);
        }
        return this.each(function (index) {
            var element = $(this);
            // Return early if this element already has a plugin instance
            if (element.data('bootstrapWizard')) return;
            // pass options to plugin constructor
            var wizard = new bootstrapWizardCreate(element, options);
            // Store plugin object in this element's data
            element.data('bootstrapWizard', wizard);
            // and then trigger initial change
            wizard.fixNavigationButtons();
        });
    };

    // expose options
    $.fn.bootstrapWizard.defaults = {
        withVisible: true,
        tabClass: 'nav nav-pills',
        nextSelector: '.wizard li.next',
        previousSelector: '.wizard li.previous',
        onShow: null,
        onInit: null,
        onNext: null,
        onPrevious: null,
        onLast: null,
        onFirst: null,
        onFinish: null,
        onBack: null,
        onTabChange: null,
        onTabClick: null,
        onTabShow: null
    };

})



(jQuery);

</script>

<style>


   /*removes tickers in input fields*/
    input[type=number]::-webkit-outer-spin-button,
input[type=number]::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

input[type=number] {
    -moz-appearance:textfield;
}


</style>



</head>
<body>

   <!--DIV to Center Header-->
     <div class="container text-center">

    <% 
If (strWebsite = "MOBILE") Then Call WriteHeader("Cost-Per-Mile Calculator") ELSE Call WriteHeader() End If
    %>

    </div>

<!--Form Start-->

    <form id="myForm" method="get" name="myForm">
        <div id="rootwizard">
            <div class="navbar">
                <div class="navbar-inner">
                    <div class="container text-center">
                        <ul>
                            <li><a href="#tab1" data-toggle="tab">Goodyear Cost</a></li>
                            <li><a href="#tab2" data-toggle="tab">Goodyear Miles</a></li>
                            <li><a href="#tab3" data-toggle="tab">Goodyear Tread</a></li>
                            <li><a href="#tab4" data-toggle="tab">Competitor Cost</a></li>
                            <li><a href="#tab5" data-toggle="tab">Competitor Miles</a></li>
                            <li><a href="#tab6" data-toggle="tab">Competitor Tread</a></li>
                            <li><a href="#tab7" data-toggle="tab">Results</a></li>
                        </ul>
                    </div>
                </div>
            </div>
          
                        <div class="tab-content">
                            <div class="tab-pane" id="tab1">
                            <!--Goodyear Cost/Casing Credit/Radio Options-->

                                <div class="container text-center">
                              
                                 <div class="form-group row">
                                      <div class="col-xs-6" >
                                     <label for="radio-group" class=""></label>
                                    <div class="radio-group">
                                      <input type="radio" name="opt1"  value="Steer" checked=""/>Steer
                                        <input type="radio" name="opt1" value="Drive"/>Drive
                                        <input type="radio" name="opt1" value="Trail"/>Trail
                                    </div>
                                          </div>
                                      <div class="col-xs-6" >
                                    <label for="radio-group-2" class=""></label>
                                    <div class="radio-group-2" data-toggle="buttons">
                                      <input type="radio" name="opt2" id="" value="Steer" checked=""/>New
                                       <input type="radio" name="opt2" value="Drive"/>1st Retread
                                       <input type="radio" name="opt2" value="Trail"/>2nd Retread
                                    </div>
                                   </div>
                                      </div>
                                    <br>
                                        <div id="control-group form-group row">
                                            <label class="control-label" for="GYCost">Goodyear Cost</label>
                                            <div class="controls">
                                               <input id="GYCost" name="GYCost" class=" currency form-control required" placeholder="$300"/>
                                            </div>
                                        </div>
                                        <div class="control-group form-group">
                                            <label class="control-label" for="GYCasingCredit">Goodyear Casing Credit </label>
                                            <div class="controls">
                                                <input id="GYCasingCredit" name="GYCasingCredit" class="currency form-control required" placeholder="$30"/>
                                            </div>
                                        </div>
                                    </div>
                                </div>
            
                            
                            
                            <!--Goodyear Install Miles-->
                            <div class="tab-pane" id="tab2">
                                <div class="container text-center">

                                    <div class="control-group form-group">
                                        <label class="control-label" for="GYInstallMiles">Goodyear Install Miles</label>
                                        <div class="controls">
                                            <input id="GYInstallMiles" name="GYInstallMiles" class="number form-control required" placeholder="100,000"/>
                                        </div>
                                    </div>

                                    <!--Goodyear Removal Miles-->
                                    <div class="control-group form-group">
                                        <label class="control-label" for="GYRemovalMiles">Goodyear Removal Miles</label>
                                        <div class="controls">
                                            <input id="GYRemovalMiles" name="GYRemovalMiles" class="number form-control required" placeholder="170,000"/>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!--Goodyear Tread-->
                            <div class="tab-pane" id="tab3">
                                <div class="container text-center">
                                    <div class="control-group form-group">
                                        <label class="control-label" for="GYTreadDepth">Goodyear Tread Depth</label>
                                        <div class="controls">
                                            <input type="number" name="GYTreadDepth" id="GYTreadDepth" class="form-control required" placeholder="18"/>
                                        </div>
                                    </div>


                                    <div class="control-group form-group">
                                        <label class="control-label" for="Remaining 32">Goodyear Remaining 32nds</label>
                                        <div class="controls">
                                            <input type="number" name="GYRemaining32" id="GYRemaining32" class="form-control required" placeholder="6"/>
                                        </div>
                                    </div>

                                </div>
                            </div>
                           
                            
                      <!--Competitor Cost/Casing Credit/Radio Options-->

                            <div class="tab-pane" id="tab4">
                                <div class="container text-center">
                                   
                                  <div class="form-group row">
                                      <div class="col-xs-6" >
                                     <label for="radio-group" class=""></label>
                                    <div class="radio-group">
                                      <input type="radio" name="opt3"  value="Steer" checked=""/>Steer
                                        <input type="radio" name="opt3" value="Drive"/>Drive
                                        <input type="radio" name="opt3" value="Trail"/>Trail
                                    </div>
                                          </div>
                                      <div class="col-xs-6" >
                                    <label for="radio-group-2" class=""></label>
                                    <div class="radio-group-2" data-toggle="buttons">
                                      <input type="radio" name="opt4" id="" value="Steer" checked=""/>New
                                       <input type="radio" name="opt4" value="Drive"/>1st Retread
                                       <input type="radio" name="opt4" value="Trail"/>2nd Retread
                                    </div>
                                   </div>
                                      </div>
                                    <br>
                                        <div id="control-group form-group">
                                            <label class="control-label" for="CompCost">Competitor Cost</label>
                                            <div class="controls">
                                                <input id="CompCost" name="CompCost" class="currency form-control required" placeholder="$300"/>
                                            </div>
                                        </div>
                                        <div class="control-group form-group">
                                            <label class="control-label" for="CompCasingCredit">Competitor Casing Credit </label>
                                            <div class="controls">
                                                <input id="CompCasingCredit" name="CompCasingCredit" class="currency form-control required" placeholder="$30"/>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                           

                            <!--Competitor Miles-->
                            <div class="tab-pane" id="tab5">
                                <div class="container text-center">
                                    <div class="control-group form-group">
                                        <label class="control-label" for="CompetitorInstallMiles">Competitor Install Miles</label>
                                        <div class="controls">
                                            <input id="CompInstallMiles" name="CompInstallMiles" class="number form-control required" placeholder="100,000"/>
                                        </div>
                                    </div>
                                    <div class="control-group form-group">
                                        <label class="control-label" for="CompRemovalMiles">Competitor Removal Miles</label>
                                        <div class="controls">
                                            <input id="CompRemovalMiles" name="CompRemovalMiles" class="number form-control required" placeholder="170,000"/>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!---->


                            <!--Competitor Tread-->

                            <div class="tab-pane" id="tab6">
                                <div class="container text-center">
                                    <div class="control-group form-group">
                                        <label class="control-label" for="CompTreadDepth">Competitor Tread Depth</label>
                                        <div class="controls">
                                            <input type="number" name="CompTreadDepth" id="CompTreadDepth" class="form-control required" placeholder="18"/>
                                        </div>
                                    </div>
                                    <div class="control-group form-group">
                                        <label class="control-label" for="CompRemaining32">Competitor Remaining 32nds</label>
                                        <div class="controls">
                                            <input type="number" name="CompRemaining32" id="CompRemaining32" class="form-control required" placeholder="6"/>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!---->

                            <!--Results Tab-->
                           
                            <div class="tab-pane" id="tab7">
                                <div class="container text-center">

                                  
                                    <div class= "row">
                                          <div class="col-xs-6" >
                                        <label for="GYNetCost">Goodyear Net Cost</label>
                                        <input type="text" style="text-align: right" class="form-control" id="GYNetCost"/>
                                              
                                          
                                        <label for="GYTotalMiles">Goodyear Total Miles</label>
                                        <input type="text" style="text-align: right" class="form-control" id="GYTotalMiles"/>
                                    
                                     
                                        <label for="GYTotalMiles">Goodyear Miles Per 32</label>
                                        <input type="text" style="text-align: right" class="form-control" id="GYMilesPer32"/>
                                    
                                    
                                        <label for="GYCPM">Goodyear CPM</label>
                                        <input type="text" style="text-align: right" class="form-control" id="GYCPM"/>
                                        
                                    
                                    </div>


                              
                                      <div class="col-xs-6 text-right" >
                                        <label for="CompNetCost">Competitor Net Cost</label>
                                        <input type="text" style="text-align: right" class="form-control" id="CompNetCost"/>
                                          
                                    
                                        <label for="CompTotalMiles">Competitor Total Miles</label>
                                        <input type="text" style="text-align: right" class="form-control" id="CompTotalMiles"/>
                                   
                                   
                                        <label for="CompMilesPer32">Competitor Miles Per 32</label>
                                        <input type="text" style="text-align: right" class="form-control" id="CompMilesPer32"/>
                                   
                                
                                        <label for="CompCPM">Competitor CPM</label>
                                        <input type="text" style="text-align: right" class="form-control" id="CompCPM"/>
                                    </div>
                                        </div>
                                
                                    </div>
                            </div>
                           
            
                              <!--Pager Wizard Buttons-->

                            <div class="container text-center">
                                <ul class="pager wizard">
                                    <li class="previous first" style="display:none;"><a href="#">First</a></li>
                                    <li class="previous"><a href="#">Previous</a></li>
                                    <li class="next last" style="display:none;"><a href="#">Last</a></li>
                                    <li class="next"><a href="#">Next</a></li>

                                </ul>
                                </div>
                            </div>
                   </div>

</form>

    <!--Form END-->






</body>



</html>


<%
End Sub
%>
